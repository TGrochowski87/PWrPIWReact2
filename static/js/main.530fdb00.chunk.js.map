{"version":3,"sources":["components/TagDropdown.js","components/Record.js","components/RecordList.js","components/GroupRecord.js","components/GroupRecordList.js","components/SearchSpace.js","components/ForumPage.js","components/NewForm.js","components/NewEntry.js","components/NavigationDrawer.js","App.js","reportWebVitals.js","index.js"],"names":["TagDropdown","usedTags","addTag","CustomToggle","React","forwardRef","ref","children","onClick","href","e","preventDefault","CustomMenu","style","className","labeledBy","useState","value","setValue","aria-labelledby","FormControl","autoFocus","placeholder","onChange","target","Button","variant","Children","toArray","filter","child","props","toLowerCase","includes","Dropdown","Toggle","as","id","Menu","map","tag","Item","uuidv4","Record","data","setUsedTags","editRecord","editMode","setEditMode","title","titleInput","setTitleInput","name","nameInput","setNameInput","description","descriptionInput","setDescriptionInput","tags","setTags","icon","faUserGraduate","type","maxLength","event","rows","Badge","pill","length","alert","faEnvelope","editedData","toAdd","element","push","saveChanges","Edit","RecordList","recordList","tagSearchInput","titleSearchInput","setShownPeople","filteredList","setFilteredList","useEffect","record","GroupRecord","editGroupRecord","peopleNeeded","peopleNeededInput","setPeopleNeededInput","faUsers","marginLeft","GroupRecordList","groupRecordList","setShownGroups","SearchSpace","setTagSearchInput","setTitleSearchInput","shownAmount","Form","Group","Row","controlId","Label","column","sm","Col","Control","ForumPage","shownPeople","shownGroups","key","setKey","Tabs","activeKey","onSelect","k","Tab","eventKey","NewForm","addRecord","isGroupForm","submitHandler","recordData","onSubmit","min","max","NewEntry","addGroupRecord","active","group","formStatus","setFormStatus","Container","useStyles","makeStyles","theme","drawer","width","drawerPaper","backgroundColor","link","textDecoration","color","palette","text","primary","toolbar","mixins","content","flexGrow","background","default","padding","spacing","NavigationDrawer","classes","basename","process","Drawer","paper","anchor","Divider","to","ListItem","button","ListItemIcon","List","ListItemText","Create","exact","path","render","App","setRecordList","setGroupRecordList","textAlign","newData","recordGroupData","editedGroupData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.530fdb00.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { FormControl, Dropdown, Button } from \"react-bootstrap\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst TagDropdown = ({ usedTags, addTag }) => {\r\n  const CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n    <a\r\n      href=\"/#\"\r\n      ref={ref}\r\n      onClick={(e) => {\r\n        e.preventDefault();\r\n        onClick(e);\r\n      }}\r\n    >\r\n      {children}\r\n      &#x25bc;\r\n    </a>\r\n  ));\r\n\r\n  const CustomMenu = React.forwardRef(\r\n    ({ children, style, className, \"aria-labelledby\": labeledBy }, ref) => {\r\n      const [value, setValue] = useState(\"\");\r\n\r\n      return (\r\n        <div\r\n          ref={ref}\r\n          style={style}\r\n          className={className}\r\n          aria-labelledby={labeledBy}\r\n        >\r\n          <FormControl\r\n            autoFocus\r\n            className=\"mx-3 my-2 w-auto\"\r\n            placeholder=\"Pick from list or add new\"\r\n            onChange={(e) => setValue(e.target.value)}\r\n            value={value}\r\n          />\r\n          <Button\r\n            variant=\"secondary\"\r\n            onClick={() => {\r\n              addTag(value);\r\n            }}\r\n          >\r\n            Add\r\n          </Button>\r\n          <ul className=\"list-unstyled\">\r\n            {React.Children.toArray(children).filter((child) =>\r\n              child.props.children.toLowerCase().includes(value)\r\n            )}\r\n          </ul>\r\n        </div>\r\n      );\r\n    }\r\n  );\r\n\r\n  return (\r\n    <Dropdown>\r\n      <Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\">\r\n        Add tags\r\n      </Dropdown.Toggle>\r\n\r\n      <Dropdown.Menu as={CustomMenu}>\r\n        {usedTags.map((tag) => (\r\n          <Dropdown.Item\r\n            key={uuidv4()}\r\n            onClick={() => {\r\n              addTag(tag);\r\n            }}\r\n          >\r\n            {tag}\r\n          </Dropdown.Item>\r\n        ))}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nexport default TagDropdown;\r\n","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUserGraduate, faEnvelope } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Edit as EditIcon } from \"@material-ui/icons\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { Badge } from \"react-bootstrap\";\r\n\r\nimport TagDropdown from \"./TagDropdown\";\r\n\r\nconst Record = ({ data, usedTags, setUsedTags, editRecord }) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  const [titleInput, setTitleInput] = useState(data.title);\r\n  const [nameInput, setNameInput] = useState(data.name);\r\n  const [descriptionInput, setDescriptionInput] = useState(data.description);\r\n  const [tags, setTags] = useState(data.tags);\r\n\r\n  const addTag = (value) => {\r\n    if (tags.length === 6) {\r\n      alert(\"Max amount reached!\");\r\n      return;\r\n    }\r\n\r\n    if (value !== null && value !== \"\") {\r\n      if (tags.includes(value)) {\r\n        alert(\"Tag already added!\");\r\n        return;\r\n      }\r\n\r\n      setTags([value, ...tags]);\r\n    }\r\n  };\r\n\r\n  const saveChanges = () => {\r\n    const editedData = {\r\n      id: data.id,\r\n      title: titleInput === \"\" ? data.title : titleInput,\r\n      name: nameInput === \"\" ? data.name : nameInput,\r\n      description:\r\n        descriptionInput === \"\" ? data.description : descriptionInput,\r\n      tags: tags.length === 0 ? data.tags : tags,\r\n    };\r\n\r\n    const toAdd = [];\r\n\r\n    for (let element of tags) {\r\n      if (!usedTags.includes(element)) {\r\n        toAdd.push(element);\r\n      }\r\n    }\r\n    setUsedTags([...toAdd, ...usedTags]);\r\n\r\n    setEditMode(false);\r\n    editRecord(editedData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"record\">\r\n      <div className=\"icon-back\">\r\n        <FontAwesomeIcon icon={faUserGraduate} className=\"icon\" />\r\n      </div>\r\n      <div className=\"record-data\">\r\n        <div className=\"record-header\">\r\n          <h3>\r\n            {editMode ? (\r\n              <input\r\n                type=\"text\"\r\n                maxLength=\"30\"\r\n                placeholder=\"Title\"\r\n                value={titleInput}\r\n                onChange={(event) => {\r\n                  setTitleInput(event.target.value);\r\n                }}\r\n              />\r\n            ) : (\r\n              `${data.title}`\r\n            )}\r\n          </h3>\r\n          <h3> - </h3>\r\n          <h3>\r\n            {editMode ? (\r\n              <input\r\n                type=\"text\"\r\n                maxLength=\"30\"\r\n                placeholder=\"Full name\"\r\n                value={nameInput}\r\n                onChange={(event) => {\r\n                  setNameInput(event.target.value);\r\n                }}\r\n              />\r\n            ) : (\r\n              `${data.name}`\r\n            )}\r\n          </h3>\r\n        </div>\r\n        <p>\r\n          {editMode ? (\r\n            <textarea\r\n              rows=\"3\"\r\n              placeholder=\"Description\"\r\n              value={descriptionInput}\r\n              onChange={(event) => {\r\n                setDescriptionInput(event.target.value);\r\n              }}\r\n            />\r\n          ) : (\r\n            `${data.description}`\r\n          )}\r\n        </p>\r\n        <>\r\n          {editMode ? (\r\n            <>\r\n              <div className=\"tag-space\">\r\n                {tags.map((tag) => (\r\n                  <Badge pill key={uuidv4()} variant=\"primary\">\r\n                    {tag}\r\n                  </Badge>\r\n                ))}\r\n              </div>\r\n              <TagDropdown usedTags={usedTags} addTag={addTag} />\r\n            </>\r\n          ) : (\r\n            <h6>{data.tags.map((tag) => `#${tag} `)}</h6>\r\n          )}\r\n        </>\r\n      </div>\r\n      <FontAwesomeIcon icon={faEnvelope} className=\"icon\" />\r\n      <div\r\n        className=\"edit\"\r\n        onClick={() => {\r\n          if (!editMode) {\r\n            setEditMode(true);\r\n          } else {\r\n            saveChanges();\r\n          }\r\n        }}\r\n      >\r\n        {editMode ? (\r\n          <>\r\n            <EditIcon /> Save\r\n          </>\r\n        ) : (\r\n          <>\r\n            <EditIcon /> Edit entry\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Record;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Record from \"./Record\";\r\n\r\nconst RecordList = ({\r\n  recordList,\r\n  tagSearchInput,\r\n  titleSearchInput,\r\n  setShownPeople,\r\n  usedTags,\r\n  setUsedTags,\r\n  editRecord,\r\n}) => {\r\n  const [filteredList, setFilteredList] = useState([...recordList]);\r\n\r\n  useEffect(() => {\r\n    setFilteredList(\r\n      recordList.filter((record) => {\r\n        if (titleSearchInput === \"\" && tagSearchInput === \"\") {\r\n          return record;\r\n        }\r\n\r\n        if (\r\n          titleSearchInput !== \"\" &&\r\n          record.title.toLowerCase().includes(titleSearchInput.toLowerCase())\r\n        ) {\r\n          return record;\r\n        }\r\n\r\n        if (tagSearchInput !== \"\") {\r\n          for (const tag of record.tags) {\r\n            if (tag.includes(tagSearchInput)) {\r\n              return record;\r\n            }\r\n          }\r\n        }\r\n        return null;\r\n      })\r\n    );\r\n  }, [tagSearchInput, titleSearchInput, recordList]);\r\n\r\n  useEffect(() => {\r\n    setShownPeople(filteredList.length);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [filteredList]);\r\n\r\n  return (\r\n    <>\r\n      {filteredList.map((record) => (\r\n        <Record\r\n          key={record.id}\r\n          data={record}\r\n          usedTags={usedTags}\r\n          setUsedTags={setUsedTags}\r\n          editRecord={editRecord}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecordList;\r\n","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUsers, faEnvelope } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Edit as EditIcon } from \"@material-ui/icons\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { Badge } from \"react-bootstrap\";\r\n\r\nimport TagDropdown from \"./TagDropdown\";\r\n\r\nconst GroupRecord = ({ data, usedTags, setUsedTags, editGroupRecord }) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  const [titleInput, setTitleInput] = useState(data.title);\r\n  const [nameInput, setNameInput] = useState(data.name);\r\n  const [descriptionInput, setDescriptionInput] = useState(data.description);\r\n  const [peopleNeededInput, setPeopleNeededInput] = useState(data.peopleNeeded);\r\n  const [tags, setTags] = useState(data.tags);\r\n\r\n  const addTag = (value) => {\r\n    if (tags.length === 6) {\r\n      alert(\"Max amount reached!\");\r\n      return;\r\n    }\r\n\r\n    if (value !== null && value !== \"\") {\r\n      if (tags.includes(value)) {\r\n        alert(\"Tag already added!\");\r\n        return;\r\n      }\r\n\r\n      setTags([value, ...tags]);\r\n    }\r\n  };\r\n\r\n  const saveChanges = () => {\r\n    const editedData = {\r\n      id: data.id,\r\n      title: titleInput === \"\" ? data.title : titleInput,\r\n      name: nameInput === \"\" ? data.name : nameInput,\r\n      description:\r\n        descriptionInput === \"\" ? data.description : descriptionInput,\r\n      tags: tags.length === 0 ? data.tags : tags,\r\n      peopleNeeded:\r\n        peopleNeededInput === 0 ? data.peopleNeeded : peopleNeededInput,\r\n    };\r\n\r\n    const toAdd = [];\r\n\r\n    for (let element of tags) {\r\n      if (!usedTags.includes(element)) {\r\n        toAdd.push(element);\r\n      }\r\n    }\r\n    setUsedTags([...toAdd, ...usedTags]);\r\n\r\n    setEditMode(false);\r\n    editGroupRecord(editedData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"record\">\r\n      <div className=\"icon-back\">\r\n        <FontAwesomeIcon icon={faUsers} className=\"icon\" />\r\n      </div>\r\n      <div className=\"record-data\">\r\n        <div className=\"record-header\">\r\n          <h3>\r\n            {editMode ? (\r\n              <input\r\n                type=\"text\"\r\n                maxLength=\"30\"\r\n                placeholder=\"Title\"\r\n                value={titleInput}\r\n                onChange={(event) => {\r\n                  setTitleInput(event.target.value);\r\n                }}\r\n              />\r\n            ) : (\r\n              `${data.title}`\r\n            )}\r\n          </h3>\r\n          <h3> - </h3>\r\n          <h3>\r\n            {editMode ? (\r\n              <input\r\n                type=\"text\"\r\n                maxLength=\"30\"\r\n                placeholder=\"Full name\"\r\n                value={nameInput}\r\n                onChange={(event) => {\r\n                  setNameInput(event.target.value);\r\n                }}\r\n              />\r\n            ) : (\r\n              `${data.name}`\r\n            )}\r\n          </h3>\r\n          <h3 style={{ marginLeft: \"10px\" }}>\r\n            {editMode ? (\r\n              <input\r\n                type=\"number\"\r\n                maxLength=\"2\"\r\n                placeholder=\"People needed\"\r\n                value={peopleNeededInput}\r\n                onChange={(event) => {\r\n                  setPeopleNeededInput(event.target.value);\r\n                }}\r\n              />\r\n            ) : (\r\n              ` | People needed: ${data.peopleNeeded}`\r\n            )}\r\n          </h3>\r\n        </div>\r\n        <p>\r\n          {editMode ? (\r\n            <textarea\r\n              rows=\"3\"\r\n              placeholder=\"Description\"\r\n              value={descriptionInput}\r\n              onChange={(event) => {\r\n                setDescriptionInput(event.target.value);\r\n              }}\r\n            />\r\n          ) : (\r\n            `${data.description}`\r\n          )}\r\n        </p>\r\n        <>\r\n          {editMode ? (\r\n            <>\r\n              <div className=\"tag-space\">\r\n                {tags.map((tag) => (\r\n                  <Badge pill key={uuidv4()} variant=\"primary\">\r\n                    {tag}\r\n                  </Badge>\r\n                ))}\r\n              </div>\r\n              <TagDropdown usedTags={usedTags} addTag={addTag} />\r\n            </>\r\n          ) : (\r\n            <h6>{data.tags.map((tag) => `#${tag} `)}</h6>\r\n          )}\r\n        </>\r\n      </div>\r\n      <FontAwesomeIcon icon={faEnvelope} className=\"icon\" />\r\n      <div\r\n        className=\"edit\"\r\n        onClick={() => {\r\n          if (!editMode) {\r\n            setEditMode(true);\r\n          } else {\r\n            saveChanges();\r\n          }\r\n        }}\r\n      >\r\n        {editMode ? (\r\n          <>\r\n            <EditIcon /> Save\r\n          </>\r\n        ) : (\r\n          <>\r\n            <EditIcon /> Edit entry\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupRecord;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport GroupRecord from \"./GroupRecord\";\r\n\r\nconst GroupRecordList = ({\r\n  groupRecordList,\r\n  tagSearchInput,\r\n  titleSearchInput,\r\n  setShownGroups,\r\n  usedTags,\r\n  setUsedTags,\r\n  editGroupRecord,\r\n}) => {\r\n  const [filteredList, setFilteredList] = useState([...groupRecordList]);\r\n\r\n  useEffect(() => {\r\n    setFilteredList(\r\n      groupRecordList.filter((record) => {\r\n        if (titleSearchInput === \"\" && tagSearchInput === \"\") {\r\n          return record;\r\n        }\r\n\r\n        if (\r\n          titleSearchInput !== \"\" &&\r\n          record.title.toLowerCase().includes(titleSearchInput.toLowerCase())\r\n        ) {\r\n          return record;\r\n        }\r\n\r\n        if (tagSearchInput !== \"\") {\r\n          for (const tag of record.tags) {\r\n            if (tag.includes(tagSearchInput)) {\r\n              return record;\r\n            }\r\n          }\r\n        }\r\n        return null;\r\n      })\r\n    );\r\n  }, [tagSearchInput, titleSearchInput, groupRecordList]);\r\n\r\n  useEffect(() => {\r\n    setShownGroups(filteredList.length);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [filteredList]);\r\n\r\n  return (\r\n    <>\r\n      {filteredList.map((record) => (\r\n        <GroupRecord\r\n          key={record.id}\r\n          data={record}\r\n          usedTags={usedTags}\r\n          setUsedTags={setUsedTags}\r\n          editGroupRecord={editGroupRecord}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GroupRecordList;\r\n","import React from \"react\";\r\nimport { Form, Button, Badge, Row, Col } from \"react-bootstrap\";\r\n\r\nconst SearchSpace = ({\r\n  tagSearchInput,\r\n  setTagSearchInput,\r\n  titleSearchInput,\r\n  setTitleSearchInput,\r\n  shownAmount,\r\n}) => {\r\n  return (\r\n    <div className=\"search-space\">\r\n      <div className=\"input-space\">\r\n        <Form>\r\n          <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n            <Form.Label column sm=\"4\">\r\n              Search by tags:\r\n            </Form.Label>\r\n            <Col sm=\"7\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                value={tagSearchInput}\r\n                onChange={(event) => {\r\n                  setTitleSearchInput(\"\");\r\n                  setTagSearchInput(event.target.value);\r\n                }}\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Row} controlId=\"formPlaintextPassword2\">\r\n            <Form.Label column sm=\"4\">\r\n              Search by title:\r\n            </Form.Label>\r\n            <Col sm=\"7\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                value={titleSearchInput}\r\n                onChange={(event) => {\r\n                  setTagSearchInput(\"\");\r\n                  setTitleSearchInput(event.target.value);\r\n                }}\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n        </Form>\r\n      </div>\r\n      <Button variant=\"secondary\">\r\n        Found <Badge variant=\"light\">{shownAmount}</Badge>\r\n        <span className=\"sr-only\">unread messages</span>\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchSpace;\r\n","import { useState } from \"react\";\r\nimport { Tabs, Tab } from \"react-bootstrap\";\r\nimport RecordList from \"./RecordList\";\r\nimport GroupRecordList from \"./GroupRecordList\";\r\nimport SearchSpace from \"./SearchSpace\";\r\n\r\nconst ForumPage = ({\r\n  recordList,\r\n  usedTags,\r\n  setUsedTags,\r\n  editRecord,\r\n  groupRecordList,\r\n  editGroupRecord,\r\n}) => {\r\n  const [tagSearchInput, setTagSearchInput] = useState(\"\");\r\n  const [titleSearchInput, setTitleSearchInput] = useState(\"\");\r\n  const [shownPeople, setShownPeople] = useState(0);\r\n  const [shownGroups, setShownGroups] = useState(0);\r\n\r\n  const [key, setKey] = useState(\"people\");\r\n\r\n  return (\r\n    <>\r\n      <SearchSpace\r\n        tagSearchInput={tagSearchInput}\r\n        setTagSearchInput={setTagSearchInput}\r\n        titleSearchInput={titleSearchInput}\r\n        setTitleSearchInput={setTitleSearchInput}\r\n        shownAmount={key === \"people\" ? shownPeople : shownGroups}\r\n      />\r\n      <div className=\"record-list\">\r\n        <Tabs\r\n          id=\"controlled-tab-example\"\r\n          activeKey={key}\r\n          onSelect={(k) => {\r\n            setKey(k);\r\n          }}\r\n        >\r\n          <Tab eventKey=\"people\" title=\"People\">\r\n            <RecordList\r\n              recordList={recordList}\r\n              tagSearchInput={tagSearchInput}\r\n              titleSearchInput={titleSearchInput}\r\n              setShownPeople={setShownPeople}\r\n              usedTags={usedTags}\r\n              setUsedTags={setUsedTags}\r\n              editRecord={editRecord}\r\n            />\r\n          </Tab>\r\n          <Tab eventKey=\"group\" title=\"Groups\">\r\n            <GroupRecordList\r\n              groupRecordList={groupRecordList}\r\n              tagSearchInput={tagSearchInput}\r\n              titleSearchInput={titleSearchInput}\r\n              setShownGroups={setShownGroups}\r\n              usedTags={usedTags}\r\n              setUsedTags={setUsedTags}\r\n              editGroupRecord={editGroupRecord}\r\n            />\r\n          </Tab>\r\n        </Tabs>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ForumPage;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button, Badge } from \"react-bootstrap\";\r\nimport TagDropdown from \"./TagDropdown\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst NewForm = ({ addRecord, usedTags, setUsedTags, isGroupForm }) => {\r\n  const [titleInput, setTitleInput] = useState(\"\");\r\n  const [nameInput, setNameInput] = useState(\"\");\r\n  const [descriptionInput, setDescriptionInput] = useState(\"\");\r\n  const [peopleNeededInput, setPeopleNeededInput] = useState(1);\r\n  const [tags, setTags] = useState([]);\r\n\r\n  const clearInputs = () => {\r\n    setTitleInput(\"\");\r\n    setNameInput(\"\");\r\n    setDescriptionInput(\"\");\r\n    setTags([]);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (titleInput === \"\" || nameInput === \"\" || descriptionInput === \"\") {\r\n      alert(\"Please fill the entire form before posting!\");\r\n      return;\r\n    }\r\n\r\n    const toAdd = [];\r\n\r\n    for (let element of tags) {\r\n      if (!usedTags.includes(element)) {\r\n        toAdd.push(element);\r\n      }\r\n    }\r\n    setUsedTags([...toAdd, ...usedTags]);\r\n\r\n    let recordData = {\r\n      id: uuidv4(),\r\n      title: titleInput,\r\n      name: nameInput,\r\n      description: descriptionInput,\r\n      tags: tags,\r\n      peopleNeeded: peopleNeededInput,\r\n    };\r\n\r\n    addRecord(recordData);\r\n    clearInputs();\r\n  };\r\n\r\n  const addTag = (value) => {\r\n    if (tags.length === 6) {\r\n      alert(\"Max amount reached!\");\r\n      return;\r\n    }\r\n\r\n    if (value !== null && value !== \"\") {\r\n      if (tags.includes(value)) {\r\n        alert(\"Tag already added!\");\r\n        return;\r\n      }\r\n\r\n      setTags([value, ...tags]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      onSubmit={(event) => {\r\n        submitHandler(event);\r\n      }}\r\n    >\r\n      <Form.Group>\r\n        <Form.Label>Title</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Title\"\r\n          maxLength=\"30\"\r\n          value={titleInput}\r\n          onChange={(event) => {\r\n            setTitleInput(event.target.value);\r\n          }}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group>\r\n        <Form.Label>Full name</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Full name\"\r\n          maxLength=\"30\"\r\n          value={nameInput}\r\n          onChange={(event) => {\r\n            setNameInput(event.target.value);\r\n          }}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group>\r\n        <Form.Label>Description</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows={6}\r\n          maxLength=\"300\"\r\n          value={descriptionInput}\r\n          onChange={(event) => {\r\n            setDescriptionInput(event.target.value);\r\n          }}\r\n        />\r\n      </Form.Group>\r\n\r\n      {isGroupForm ? (\r\n        <div className=\"form-bottom\">\r\n          <div className=\"bottom-left\">\r\n            <Form.Group>\r\n              <Form.Label>\r\n                Tags<p>Max. 6</p>\r\n              </Form.Label>\r\n              <div className=\"tag-space\">\r\n                {tags.map((tag) => (\r\n                  <Badge pill key={uuidv4()} variant=\"primary\">\r\n                    {tag}\r\n                  </Badge>\r\n                ))}\r\n              </div>\r\n            </Form.Group>\r\n\r\n            <TagDropdown usedTags={usedTags} addTag={addTag} />\r\n            <br />\r\n          </div>\r\n          <Form.Group>\r\n            <Form.Label>People needed</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"1\"\r\n              min=\"1\"\r\n              max=\"20\"\r\n              value={peopleNeededInput}\r\n              onChange={(event) => {\r\n                if (event.target.value > 20) {\r\n                  setPeopleNeededInput(20);\r\n                } else if (event.target.value < 1) {\r\n                  setPeopleNeededInput(1);\r\n                } else {\r\n                  setPeopleNeededInput(event.target.value);\r\n                }\r\n              }}\r\n            />\r\n          </Form.Group>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <Form.Group>\r\n            <Form.Label>\r\n              Tags<p>Max. 6</p>\r\n            </Form.Label>\r\n            <div className=\"tag-space\">\r\n              {tags.map((tag) => (\r\n                <Badge pill key={uuidv4()} variant=\"primary\">\r\n                  {tag}\r\n                </Badge>\r\n              ))}\r\n            </div>\r\n          </Form.Group>\r\n\r\n          <TagDropdown usedTags={usedTags} addTag={addTag} />\r\n          <br />\r\n        </>\r\n      )}\r\n      {/* <div className=\"form-bottom\">\r\n        <div className=\"bottom-left\">\r\n          <Form.Group>\r\n            <Form.Label>\r\n              Tags<p>Max. 6</p>\r\n            </Form.Label>\r\n            <div className=\"tag-space\">\r\n              {tags.map((tag) => (\r\n                <Badge pill key={uuidv4()} variant=\"primary\">\r\n                  {tag}\r\n                </Badge>\r\n              ))}\r\n            </div>\r\n          </Form.Group>\r\n\r\n          <TagDropdown usedTags={usedTags} addTag={addTag} />\r\n          <br />\r\n        </div>\r\n        <Form.Group>\r\n          <Form.Label>People needed</Form.Label>\r\n          <Form.Control\r\n            type=\"number\"\r\n            placeholder=\"1\"\r\n            min=\"1\"\r\n            max=\"20\"\r\n            value={peopleNeededInput}\r\n            onChange={(event) => {\r\n              if (event.target.value > 20) {\r\n                setPeopleNeededInput(20);\r\n              } else if (event.target.value < 1) {\r\n                setPeopleNeededInput(1);\r\n              } else {\r\n                setPeopleNeededInput(event.target.value);\r\n              }\r\n            }}\r\n          />\r\n        </Form.Group>\r\n      </div> */}\r\n\r\n      <Button variant=\"primary\" type=\"submit\">\r\n        Submit\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default NewForm;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button, Container } from \"react-bootstrap\";\r\nimport NewForm from \"./NewForm\";\r\n\r\nconst NewEntry = ({ addRecord, addGroupRecord, usedTags, setUsedTags }) => {\r\n  const [formStatus, setFormStatus] = useState({\r\n    active: false,\r\n    group: false,\r\n  });\r\n\r\n  return (\r\n    // <div className=\"new-entry\">\r\n    <Container className=\"my-5 w-50 entry\">\r\n      {formStatus.active ? (\r\n        <NewForm\r\n          addRecord={formStatus.group ? addGroupRecord : addRecord}\r\n          usedTags={usedTags}\r\n          setUsedTags={setUsedTags}\r\n          isGroupForm={formStatus.group}\r\n        />\r\n      ) : (\r\n        <Form>\r\n          <Button\r\n            variant=\"secondary\"\r\n            type=\"submit\"\r\n            className=\"choice\"\r\n            onClick={() => {\r\n              setFormStatus({ active: true, group: false });\r\n            }}\r\n          >\r\n            New single person entry\r\n          </Button>\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <Button\r\n            variant=\"secondary\"\r\n            type=\"submit\"\r\n            className=\"choice\"\r\n            onClick={() => {\r\n              setFormStatus({ active: true, group: true });\r\n            }}\r\n          >\r\n            New group entry\r\n          </Button>\r\n        </Form>\r\n      )}\r\n    </Container>\r\n    //</div>\r\n  );\r\n};\r\n\r\nexport default NewEntry;\r\n","import React from \"react\";\r\nimport { List as ListIcon, Create as CreateIcon } from \"@material-ui/icons\";\r\nimport {\r\n  makeStyles,\r\n  Divider,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport ForumPage from \"./ForumPage\";\r\nimport NewEntry from \"./NewEntry\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  drawer: {\r\n    width: \"20%\",\r\n  },\r\n  drawerPaper: {\r\n    backgroundColor: \"darkgrey\",\r\n    width: \"20%\",\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: theme.palette.text.primary,\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst NavigationDrawer = ({\r\n  recordList,\r\n  addRecord,\r\n  editRecord,\r\n  groupRecordList,\r\n  addGroupRecord,\r\n  editGroupRecord,\r\n  usedTags,\r\n  setUsedTags,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        anchor=\"left\"\r\n      >\r\n        <div className={`${classes.toolbar} menu`}>\r\n          <h4>MENU</h4>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <Link to=\"/\" className={classes.link}>\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <ListIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Forum\" />\r\n            </ListItem>\r\n          </Link>\r\n          <Link to=\"/new\" className={classes.link}>\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <CreateIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"New Entry\" />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Drawer>\r\n\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          render={(props) => (\r\n            <ForumPage\r\n              {...props}\r\n              recordList={recordList}\r\n              editRecord={editRecord}\r\n              groupRecordList={groupRecordList}\r\n              editGroupRecord={editGroupRecord}\r\n              usedTags={usedTags}\r\n              setUsedTags={setUsedTags}\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          path=\"/new\"\r\n          render={(props) => (\r\n            <NewEntry\r\n              {...props}\r\n              addRecord={addRecord}\r\n              addGroupRecord={addGroupRecord}\r\n              usedTags={usedTags}\r\n              setUsedTags={setUsedTags}\r\n            />\r\n          )}\r\n        />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default NavigationDrawer;\r\n","import { useState } from \"react\";\nimport NavigationDrawer from \"./components/NavigationDrawer\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./styles/App.scss\";\n\nfunction App() {\n  const [recordList, setRecordList] = useState([\n    {\n      id: uuidv4(),\n      title: \"SO2\",\n      name: \"Tomasz\",\n      description:\n        \"Please someone help me with SO, I have no idea what im doing...\",\n      tags: [\"help\", \"SO\"],\n    },\n    {\n      id: uuidv4(),\n      title: \"VHDL\",\n      name: \"Mark Dark\",\n      description: \"I'm looking for someone to make VHDL project with\",\n      tags: [\"vhdl\", \"digital\", \"circuits\"],\n    },\n    {\n      id: uuidv4(),\n      title: \"PIW\",\n      name: \"Tomasz\",\n      description: \"How you all guys doin'?\",\n      tags: [\"react\", \"sampletag\", \"hello\"],\n    },\n  ]);\n\n  const [groupRecordList, setGroupRecordList] = useState([\n    {\n      id: uuidv4(),\n      title: \"KPZ\",\n      name: \"Tomasz, Łukasz\",\n      description: \"We're looking for people for our team project\",\n      tags: [\"PZ\", \"KPZ\"],\n      peopleNeeded: 3,\n    },\n    {\n      id: uuidv4(),\n      title: \"NiDUC\",\n      name: \"Firstname Lastname\",\n      description: \"Anyone wanna do simulation on project?\",\n      tags: [\"NiDUC\", \"project\", \"python\"],\n      peopleNeeded: 1,\n    },\n    {\n      id: uuidv4(),\n      title: \"KPZ\",\n      name: \"Marcin, Marek\",\n      description: \"We're also looking for people for our team project\",\n      tags: [\"react\", \"sampletag\", \"hello\"],\n      peopleNeeded: 2,\n    },\n  ]);\n\n  const [usedTags, setUsedTags] = useState([\"react\", \"c++\", \"c#\"]);\n\n  const addRecord = (recordData) => {\n    setRecordList([recordData, ...recordList]);\n  };\n\n  const addGroupRecord = (recordGroupData) => {\n    setGroupRecordList([recordGroupData, ...groupRecordList]);\n  };\n\n  const editRecord = (editedData) => {\n    const newData = [];\n\n    for (let record of recordList) {\n      if (record.id !== editedData.id) {\n        newData.push(record);\n      } else {\n        newData.push(editedData);\n      }\n    }\n    setRecordList(newData);\n  };\n\n  const editGroupRecord = (editedGroupData) => {\n    const newData = [];\n\n    for (let record of groupRecordList) {\n      if (record.id !== editedGroupData.id) {\n        newData.push(record);\n      } else {\n        newData.push(editedGroupData);\n      }\n    }\n    setGroupRecordList(newData);\n  };\n\n  return (\n    <div className=\"App\" style={{ textAlign: \"center\" }}>\n      <NavigationDrawer\n        recordList={recordList}\n        addRecord={addRecord}\n        editRecord={editRecord}\n        groupRecordList={groupRecordList}\n        addGroupRecord={addGroupRecord}\n        editGroupRecord={editGroupRecord}\n        usedTags={usedTags}\n        setUsedTags={setUsedTags}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}